/**
 * 어떻게든 TC를 맞추긴 했는데...음 뭐랄까 좀 애매한듯... 모든 경우의 수가 맞는지 ....
 * 현재까지는 다 맞음
 */

// problems = [score, time][]
function solution1(limitTime, problems) {
  problems = problems.sort((a, b) => b[0] / b[1] - a[0] / a[1]); // 시간당 점수가 큰 문제순으로 정렬
  let totalTime = 0,
    totalScore = 0;

  for (const [s, t] of problems) {
    if (totalTime + t > limitTime) continue;

    totalScore += s;
    totalTime += t;
  }

  return totalScore;
}

console.log(
  solution1(20, [
    [10, 5],
    [25, 12],
    [15, 8],
    [6, 3],
    [7, 4],
  ])
); // 41

console.log(
  solution1(70, [
    [5, 2],
    [11, 5],
    [12, 7],
    [16, 8],
    [20, 10],
    [30, 15],
    [10, 5],
    [25, 12],
    [15, 8],
    [6, 3],
    [7, 4],
    [3, 2],
  ])
); // 141

console.log(
  solution1(150, [
    [16, 11],
    [20, 16],
    [11, 6],
    [5, 2],
    [11, 5],
    [12, 7],
    [16, 8],
    [20, 10],
    [30, 15],
    [10, 5],
    [25, 12],
    [15, 8],
    [6, 3],
    [7, 4],
    [3, 2],
    [8, 5],
    [9, 12],
    [19, 11],
    [9, 6],
  ])
); // 252

console.log(
  solution1(150, [
    [5, 2],
    [11, 5],
    [12, 7],
    [16, 8],
    [20, 10],
    [30, 15],
    [10, 5],
    [25, 12],
    [15, 8],
    [6, 3],
    [7, 4],
    [3, 2],
    [8, 5],
    [9, 12],
    [19, 11],
  ])
); // 196

// DP 문제로 접근
// dp[i] : i분동안 얻을 수 있는 최대 점수
function solution2(limitTime, problems) {}

console.log(
  solution2(20, [
    [10, 5],
    [25, 12],
    [15, 8],
    [6, 3],
    [7, 4],
  ])
); // 41

console.log(
  solution2(70, [
    [5, 2],
    [11, 5],
    [12, 7],
    [16, 8],
    [20, 10],
    [30, 15],
    [10, 5],
    [25, 12],
    [15, 8],
    [6, 3],
    [7, 4],
    [3, 2],
  ])
); // 141

console.log(
  solution2(150, [
    [16, 11],
    [20, 16],
    [11, 6],
    [5, 2],
    [11, 5],
    [12, 7],
    [16, 8],
    [20, 10],
    [30, 15],
    [10, 5],
    [25, 12],
    [15, 8],
    [6, 3],
    [7, 4],
    [3, 2],
    [8, 5],
    [9, 12],
    [19, 11],
    [9, 6],
  ])
); // 252

console.log(
  solution2(150, [
    [5, 2],
    [11, 5],
    [12, 7],
    [16, 8],
    [20, 10],
    [30, 15],
    [10, 5],
    [25, 12],
    [15, 8],
    [6, 3],
    [7, 4],
    [3, 2],
    [8, 5],
    [9, 12],
    [19, 11],
  ])
); // 196
