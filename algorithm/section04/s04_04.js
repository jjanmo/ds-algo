function solution1(total, list) {
  list.sort((a, b) => a[0] + a[1] - (b[0] + b[1]));

  let sum = 0;
  let count = 0;
  let index = 0;
  for (let i = 0; i < list.length; i++) {
    sum += list[i][0] + list[i][1];
    count++;
    if (sum > total) {
      sum -= list[i][0] + list[i][1];
      count--;
      index = i;
      break;
    }
  }

  // 할인받는 물건 체크
  for (let i = index; i < list.length; i++) {
    const value = list[i][0] / 2;
    sum += value + list[i][1];
    if (sum <= total) {
      count++;
    } else {
      sum -= value + list[i][1];
    }
  }

  return count;
}
// solution1은 틀린 풀이!!
// 반례 존재
// → 총합이 큰 순서대로만 더하기 때문에 할인할 수 있는 상품이 항상 총 합이 큰 경우만 해당된다.
// → 총 합이 작은 상품도 할인 상품이 되는 경우가 빠지게 된다.

// 모든 경우의 수 찾기
// → 한가지 상품을 할인 받았다고 가정하고 더해보기
// → 할인 받는 상품에 대한 경우의 수를 따져보기
function solution2(total, list) {
  let result = 0;
  list.sort((a, b) => a[0] + a[1] - (b[0] + b[1]));

  for (let i = 0; i < list.length; i++) {
    // 할인 받는 상품 선정 → 선정한 것부터 계산해줘야 할인되는 모든 경우의 수를 따질수 있다.
    let sum = 0;
    let count = 1;
    sum += list[i][0] / 2 + list[i][1];
    for (let j = 0; j < list.length; j++) {
      if (j !== i) {
        count++;
        sum += list[j][0] + list[j][1];
      }

      // 체크
      if (sum > total) {
        count--;
        break;
      }
    }
    if (result < count) result = count;
  }

  return result;
}

// console.log(
//   solution1(28, [
//     [6, 6],
//     [2, 2],
//     [4, 3],
//     [4, 5],
//     [10, 3],
//   ])
// ); // 4

// console.log(
//   solution1(596, [
//     [6, 331],
//     [4, 251],
//     [8, 675],
//     [5, 214],
//     [10, 735],
//     [5, 996],
//     [9, 609],
//     [9, 371],
//     [8, 377],
//     [5, 707],
//     [7, 907],
//     [6, 433],
//     [9, 737],
//     [8, 796],
//     [4, 265],
//     [3, 484],
//     [8, 488],
//     [8, 191],
//     [9, 232],
//     [4, 195],
//   ])
// ); // 2

// console.log(
//   solution1(41, [
//     [8, 6],
//     [2, 2],
//     [4, 3],
//     [4, 5],
//     [12, 1],
//   ])
// ); //5

//------------------------

console.log(
  solution2(28, [
    [6, 6],
    [2, 2],
    [4, 3],
    [4, 5],
    [10, 3],
  ])
); // 4

console.log(
  solution2(596, [
    [6, 331],
    [4, 251],
    [8, 675],
    [5, 214],
    [10, 735],
    [5, 996],
    [9, 609],
    [9, 371],
    [8, 377],
    [5, 707],
    [7, 907],
    [6, 433],
    [9, 737],
    [8, 796],
    [4, 265],
    [3, 484],
    [8, 488],
    [8, 191],
    [9, 232],
    [4, 195],
  ])
); // 2

console.log(
  solution2(41, [
    [8, 6],
    [2, 2],
    [4, 3],
    [4, 5],
    [12, 1],
  ])
); // 5

/*
✅  기준 : 무엇을 할인 상품으로 할 것인가
할인 상품부터 계산하고 나머지를 계산한다.
여기서 의문점을 갖을 수 있는 부분이 순서이다. 순서에 맞춰서 계산해야하는거 아닌가??
BUT, 문제 어디에서도 순서에 대해서 언급한 부분이 없고, 단지 상품의 더한 값이 예산보다 커지는지 여부만을 조건으로 주었다.
반값 할인을 먼저하고 계산을 진행하든, 나중에 하든 전혀 상관이 없다.

앞에 문제와 약간 비슷한 느낌이다.
- 역발상!!
- 반대로 생각하기?!
*/
